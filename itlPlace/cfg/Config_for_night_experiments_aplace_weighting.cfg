params:
{
  //techname = "IWLS"; //default
  //techname = "NangateMapped"; //with technology mapping
  //techname = "Nangate";       //without technology mapping
  //techname = "ISPD";

  objective = "LSE";
  //objective = "SOD";
  //objective = "LR";

  //def = ".\\IWLS05\\s298.def";           //141 cells
  //def = ".\\IWLS05\\pci_spoci_ctrl.def"; //1267 cells
  def = ".\\IWLS05\\tv80.def";           //7161 cells
  //def = ".\\IWLS05\\ac97_ctrl.def";      //11855 cells
  //def = ".\\IWLS05\\b21.def";            //18718 cells

  target_clock_cycle = 0.0;
};

plotter:
{
  //enabled = true;
  windowHeight = 600;
  histogramWindowHeight = 300;
  histogramWindowWidth = 1200;
  autoRefreshStep = 10;
  //saveImages = true;
  saveMilestoneImages = true;
  embeedMilestones = true;
  //createVideo = true;
};

DesignFlow:
{
  //PRE-RUN SECTION
  SkipSpecialNets = true;

  //MACRO LOOP SECTION
  nMacroIterations = 9;
  //LoopRandomPlacement = true;
  LoopGlobalPlacement = true;
  //LoopLR          = true;
  LoopLegalization = true;
  LoopDetailedPlacement = true;

  //STANDARD PLACEMENT SECTION
  //RandomPlacement = true;
  GlobalPlacement = true;
  //LR          = true;
  Legalization = true;
  DetailedPlacement = true;

  //REPEATERS INSERTION SECTION
  //Buffering = true;
  //BufRandomPlacement = true;
  //BufGlobalPlacement = true;
  //BufLR          = true;
  //BufLegalization = true;
  //BufDetailedPlacement = true;

  //MISCELLANEOUS
  //DrawCongestionMap = true; //needs testing
  //FGRRouting = true;
};

LSE:
{
  Clustering:
  {
    useClusteringInformationFromFile  = false;
    desiredNumberOfClustersAtEveryBin = 5;
    clusterRatio                      = 5;
    desiredFinalNumberOfClusters      = 6000;
    clustersAreaTolerance             = 1.5;
    deleteDuplicatingNets             = true;
  };

  GlobalPlacement:
  {
    useQAClass = true;
    earlyExit = true;
    nConvergedIterations = 2;
    nTolerantIterations = 2;

    placeToTheCenter = true;

    useLogSumExp          = true;
    useQuadraticSpreading = true;
    useUnidirectSpreading = true;  //used only with useQuadraticSpreading = true
    useBorderBounds       = true;

    //plotSolverState = true;
    gradientScaling = 10000.0;
    saveTAOmilestones = true;
  };

  TAOOptions:
  {
    spreadingWeightInitialMultiplier = 0.05;
    frtol = 1.0e-8;
  };
};

DetailedPlacement:
{
  HorizontalSearch:
  {
    active = true;
    plotter: {enabled = false;};
  };

  GlobalSwap:
  {
    active = true;
    plotter: {enabled = false;};
  };

  VerticalSearch:
  {
    active = true;
    plotter: {enabled = false;};
  };
};

Timing:
{
  SignalDirectionsUsed = 1; //rise\fall
  RCE:
  {
    LayersUsed = 0;//0 - lumped (=1 with simplified C extraction), 1 or 2
  };
};

CriticalPaths:
{
  countLogReportCriticalPaths = 0;  //set to -1 if you want to print all the critical paths
  countPlotCriticalPaths      = 0;  //set to -1 if you want to plot all the critical paths
  plotWait = 1;
};

NetWeighting:
{
  useNetWeights = true;
  netWeightsImportFileName = "";
  netWeightsExportFileName = "";
  method = "APlace";
  //method = "SensitivityGuidedNetWeighting";

  APlace:
  {
    u    = 0.3;
    beta = 2.0;
    aggregationMethod = "sum-1";
  };
  SensitivityGuidedNetWeighting:
  {
    minWeight = 1.0;
    alpha     = 0.6;
    C         = 3227.0;
  };
};

Legalization:
{
  Abacus:
  {
    //usePlotter = true;
    plotterStep = 100;
    //useWeights = true;
    weightMultiplier = 1;
  };
};

Buffering:
{
  LSE: { Clustering: { useClusteringInformationFromFile  = false; }; };
  SOD: { Clustering: { useClusteringInformationFromFile  = false; }; };
  LR:  { Clustering: { useClusteringInformationFromFile  = false; }; };

  DefaultBuffer:
  {
    Macro="BUF_ITL";
    InputPin = "A";
    OutputPin = "Y";
  };
  Percent = 1.00;
  Iterations = 15;
  DoIterative = false;

  Legalization:
  {
    doReport = false;
  };
};

CongestionMap:
{
  nHorTiles  = 30;
  nVertTiles = 30;
    nMaxLines  = 10; //all wires
    nMaxCLines = 4; //critical wires
    nMaxPins   = 10;
  };

  FGRRouting:
  {
  maxRoutingTime        = 86400; //max time to work in seconds
  calculateCapacity     = true;  //use (or not) formula to calculate capacity
  powerTracsPerRow      = 2;
  verticalCapacity      = 20;
  horizontalCapacity    = 20;
  nHorTiles             = 0; //if 0 then
  nVertTiles            = 0; //nHorTiles == nVertTiles == nRows / 2
  FGROutputFile         = "@params.def";
  ImageSize             = 900; //horizontal and vertical number of pixels in the XPM file
  PrintToRoutersFormats = false;
  ISPDFileName          = "@params.def";
  LabyrinthFileName     = "@params.def";
};

Config:
{
	//Trace = true;
	Replicate = true;
	WarnOnChange = true;
};