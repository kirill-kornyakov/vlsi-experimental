params:
{
    objective = "LR";
    target_clock_cycle = 0.0;

    techname = "IWLS";
    def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_001267_pci_spoci_ctrl.def"; //target_clock_cycle = 0.0;
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_000019_s27.def";
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_007161_tv80.def"; target_clock_cycle = 3.28;
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_012562_b15.def"; target_clock_cycle = 3.18;
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_019107_b20.def"; target_clock_cycle = 4.16;
    //def = "../../Benchmarks/IWLS_GP_r1511/IWLS_GP_000086_b01.def";

    //techname = "SCL";
    //def = "SCL/2010-08-16_11-52-35_hpd_bsd_cabac_biaridec.def"; target_clock_cycle = 0.25;
    //def = "SCL/2010-08-12_10-32-26_C1355.def"; target_clock_cycle = 0.26;
};

plotter:
{
    enabled = false;
    windowHeight = 800;
    //saveImages = true;
    saveMilestoneImages = true;
    embeedMilestones = true;
    //createVideo = true;
};

DesignFlow:
{
    SkipSpecialNets = true;
    SkipBrokenNets = true;

    //RandomPlacement = true;
    LR = true;
    Legalization = true;
};

Timing:
{
    SignalDirectionsUsed = 1; //1 - single, 2 - rise\fall
};

CriticalPaths:
{
    countLogReportCriticalPaths = 0;  //set to -1 if you want to print all the critical paths
    countPlotCriticalPaths = 0;       //set to -1 if you want to plot all the critical paths
    plotWait = 10;
};

LR:
{
    Clustering:
    {
        useClusteringInformationFromFile = false;
        desiredFinalNumberOfClusters = 1000000;
    };

    GlobalPlacement:
    {
        placeToTheCenter = false;

        useQAClass = true;
        QAcriteria = "LTNS";
        earlyExit = true;
        nTolerantIterations = 3;
        nConvergedIterations = 3;


        //useSumOfDelays = true; //Remove it later


        useLogSumExp = true;
        useLR = true;
        useSpreading = true;

        Weights:
        {
            lseInitialRatio = 5.0e+0;
            sprInitialRatio = 1.0e+0;

            lseDesiredRatio = 1.0;
            sprDesiredRatio = 1.1;

            lseUpdateMultiplier = 1.0;
            sprUpdateMultiplier = 1.1;

            useSprUpdateFunction = false;
            //sprUpdateFunction = 1;   //1 + x^N
            //sprUpdateFunction = 2;   //(1 + arctg(x))^N
            sprUpdateFunction = 3;     //R^x
            //sprUpdateFunction = 4;   //(1 + x)^N

            useLseUpdateFunction = false;
            //lseUpdateFunction = 5;   //1 + (x^M)
            //lseUpdateFunction = 6;   //(1 + arctg(x))^M
            //lseUpdateFunction = 7;   //P^x
            //lseUpdateFunction = 8;   //(1 + x)^M

            N = 1.0;
            M = 1.0;
            R = 5000.0;
            P = 1.1;
        };

        Plotting:
        {
            plotSolverState = true;
            gradientScaling = 0.0e+6;
            //saveTAOmilestones = true;
        };

        TAOOptions:
        {
            commandLine = ""; //-tao_monitor
            nInnerIterations = 8;
            frtol = 1.0e-12;
        };

        LagrangianRelaxation:
        {
            muLR     = 0.5;

            theta    = 100.0;
            minFactor = 0.01;
            referenceValue = 100;

            Reporter:
            {
                verbose = true;
                plotMus = false;
                order = "CriticalPath"; // "Topological"
            };
        };

        PQAT:
        {
            showPercents = false;
            Columns = ["Objective", "ObHPWL", "ObLR", "ObSpr", "gHPWL", "gLR", "gSpr", "HPWL", "LHPWL", "TNS", "LTNS", "WNS", "LWNS"];
        };
    };

    Abacus:
    {
        useWeights = true;
        weightMultiplier = 10.0;
    };
};